import tkinter
from tkinter import *
from random import *

symbols = ['h', 'he', 'li', 'be', 'b', 'c', 'n', 'o', 'f', 'ne', 'na', 'mg', 'al', 'si', 'p', 's', 'cl', 'ar', 'k', 'ca',
           'sc', 'ti', 'v', 'cr', 'mn', 'fe', 'co', 'ni', 'cu', 'zn', 'ga', 'ge', 'as', 'se', 'br', 'kr', 'rb', 'sr', 'y', 'zr',
           'nb', 'mo', 'tc', 'ru', 'rh', 'pd', 'ag', 'cd', 'in', 'sn', 'sb', 'te', 'i', 'xe', 'cs', 'ba', 'la', 'ce', 'pr', 'nd',
           'pm', 'sm', 'eu', 'gd', 'tb', 'dy', 'ho', 'er', 'tm', 'yb', 'lu', 'hf', 'ta', 'w', 're', 'os', 'ir', 'pt', 'au', 'hg',
           'tl', 'pb', 'bi', 'po', 'at', 'rn', 'fr', 'ra', 'ac', 'th', 'pa', 'u', 'np', 'pu', 'am', 'cm', 'bk', 'cf', 'es', 'fm',
           'md', 'no', 'lr', 'rf', 'db', 'sg', 'bh', 'hs', 'mt', 'ds', 'rg', 'cn', 'nh', 'fl', 'mc', 'lv', 'ts', 'og']
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
           21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
           41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
           61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
           81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
           101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118]
hints = [1, 1,
         2, 2, 2, 2, 2, 2, 2, 2,
         3, 3, 3, 3, 3, 3, 3, 3,
         4, 4, 4, 4, 4, 4, 4, 4,
         4, 4, 4, 4, 4, 4, 4, 4,
         4, 4,
         5, 5, 5, 5, 5, 5, 5, 5,
         5, 5, 5, 5, 5, 5, 5, 5,
         5, 5,
         6, 6, 6, 6, 6, 6, 6, 6,
         6, 6, 6, 6, 6, 6, 6, 6,
         6, 6, 6, 6, 6, 6, 6, 6,
         6, 6, 6, 6, 6, 6, 6, 6,
         7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7,
         7, 7, 7, 7, 7, 7, 7, 7]
wrong = 0
running = True

def next():
    global question
    global correctans
    global wrong
    question = randint(1, 118)
    correctans = symbols[question - 1]
    atomicnum = Text(window, height=1, width=20)
    atomicnum.insert(INSERT, 'atomic number {}:'.format(question))
    atomicnum.config(state=DISABLED)
    atomicnum.grid(row=0, column=0, sticky=W)

    checkbutton = Button(window, text='check', fg='black', bg='red', command=lambda: check(), height=1, width=7)
    checkbutton.grid(row=1, column=1)
    return question, correctans, wrong

def check():
    global wrong
    answer = e.get()
    answer = answer.lower()
    if answer == correctans:
        correct()
    elif answer != correctans:
        incorrect(answer)
    return answer, wrong

def correct():
    global wrong

    correct = Text(window, height=1, width=20)
    correct.insert(INSERT, 'correct')
    correct.config(state=DISABLED)
    correct.grid(row=2, column=0, sticky=W)

    hintclr = Text(window, height=1, width=40)
    hintclr.insert(INSERT, 'hint?')
    hintclr.config(state=DISABLED)
    hintclr.grid(row=4, column=0, sticky=W)

    ansclr = Text(window, height=1, width=40)
    ansclr.insert(INSERT, 'answer?')
    ansclr.config(state=DISABLED)
    ansclr.grid(row=5, column=0, sticky=W)

    next()
    return

def incorrect(answer):
    global wrong
    wrong += 1
    if wrong == 5:
        print('game over')
        exit()

    incorrect = Text(window, height=1, width=10)
    incorrect.insert(INSERT, 'incorrect')
    incorrect.config(state=DISABLED)
    incorrect.grid(row=2, column=0, sticky=W)

    count = 0
    for i in range(len(symbols)):
        check = symbols[i]
        if check != answer:
            count += 1
        if count == len(numbers):
            wronginput = Text(window, height=1, width=40)
            wronginput.insert(INSERT, 'your input is not an element symbol')
            wronginput.config(state=DISABLED)
            wronginput.grid(row=3, column=0, sticky=W)
        else:
            hint = Text(window, height=1, width=40)
            hint.insert(INSERT, 'the element is in period {}'.format(hints[question-1]))
            hint.config(state=DISABLED)
            hint.grid(row=3, column=0, sticky=W)

    numwrong = Text(window, height=1, width=60)
    numwrong.insert(INSERT, 'wrong answers: {}. the game ends at 5 wrong answers'.format(wrong))
    numwrong.config(state=DISABLED)
    numwrong.grid(row=5, column=0, sticky=W)

    return wrong

def get_answer(correctans):
    answer = Text(window, height=1, width=40)
    answer.insert(INSERT, 'the answer is {}'.format(correctans))
    answer.config(state=DISABLED)
    answer.grid(row=4, column=0, sticky=W)
    return

while running:

    window = Tk()
    window.geometry("550x150")
    window.title("element game")

    e = Entry(window)
    e.grid(row=1, column=0, sticky=W)

    getanswer = Button(window, text='get answer', command=lambda: get_answer(correctans), height=1, width=10)
    getanswer.grid(row=3, column=1)

    generatenew = Button(window, text='generate new', command=lambda: next(), height=1, width=10)
    generatenew.grid(row=2, column=1)

    quit = Button(window, text='quit', command=lambda: exit(), height=1, width=7)
    quit.grid(row=4, column=1)

    window.mainloop()
